{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import { VNode, options } from \"preact\";\nimport { NativeTouchEvent } from \"react-native\";\n\nlet root: VNode;\n\nconst oldRootHook = (options as any)._root;\n\n(options as any)._root = (node: VNode) => {\n  root = node;\n\n  if (root != null) {\n    addEventListenerToDocument();\n  } else {\n    removeEventListenerToDocument();\n  }\n\n  if (oldRootHook) oldRootHook(node);\n};\n\nlet oldCommitHook = (options as any)._commit;\n\n(options as any)._commit = (node: VNode) => {\n  if (root && getPlugin()) {\n    const vnodes = [root];\n\n    while (vnodes.length) {\n      const vnode = vnodes.pop();\n\n      // it's a real vnode reflect to the dom\n      if (typeof (vnode as any).type === \"string\") {\n        (vnode as any)._dom._vnode = vnode;\n      }\n\n      if ((vnode as any)._children != null && (vnode as any)._children.length != null) {\n        for (let child of (vnode as any)._children) {\n          if (child != null) {\n            vnodes.push(child);\n          }\n        }\n      }\n    }\n  }\n\n  if (oldCommitHook) oldCommitHook(node);\n};\n\nenum ProcessType {\n  start = 0,\n  move,\n  end,\n}\nconst startResponderKey = \"onResponderStart\";\nconst moveResponderKey = \"onResponderMove\";\nconst endResponderKey = \"onResponderEnd\";\nconst startCheckerKeys = [\"onStartShouldSetResponderCapture\", \"onStartShouldSetResponder\"];\nconst moveCheckerKeys = [\"onMoveShouldSetResponderCapture\", \"onMoveShouldSetResponder\"];\nconst startDefinition = getEventDefinition(startCheckerKeys, startResponderKey, ProcessType.start);\nconst moveDefinition = getEventDefinition(moveCheckerKeys, moveResponderKey, ProcessType.move);\nconst endDefinition = getEventDefinition([], endResponderKey, ProcessType.end);\n\ninterface IDefinition {\n  _checkerKeys: string[];\n  _responderKey: string;\n  _process: ProcessType;\n}\n\ninterface IResponderEvents {\n  [key: string]: IDefinition;\n}\n\nconst responderEvents: IResponderEvents = {\n  touchstart: startDefinition,\n  mousedown: startDefinition,\n  touchmove: moveDefinition,\n  mousemove: moveDefinition,\n  touchend: endDefinition,\n  mouseup: endDefinition,\n};\n\nfunction getEventDefinition(_checkerKeys: string[], _responderKey: string, _process: ProcessType) {\n  return { _checkerKeys, _responderKey, _process };\n}\n\nfunction addEventListenerToDocument() {\n  for (let event in responderEvents) {\n    document.addEventListener(event, eventListener);\n  }\n}\n\nfunction removeEventListenerToDocument() {\n  for (let event in responderEvents) {\n    document.removeEventListener(event, eventListener);\n  }\n}\n\nfunction getEventPath(e: IEvent) {\n  const path = [e.target];\n  const parent: any[] = [e.target];\n\n  while (parent.length) {\n    const ele = parent.pop();\n    const parentElement = ele.parentElement;\n\n    if (parentElement) {\n      parent.push(parentElement);\n      path.push(parentElement);\n    }\n  }\n\n  return path;\n}\n\ntype IChecker = (e: IEvent) => boolean;\n\ninterface ICheckers {\n  onMoveShouldSetResponderCapture?: IChecker;\n  onMoveShouldSetResponder?: IChecker;\n  onStartShouldSetResponderCapture?: IChecker;\n  onStartShouldSetResponder?: IChecker;\n}\n\ninterface IResponders {\n  onResponderStart?: (e: IEvent) => void;\n  onResponderMove?: (e: IEvent) => void;\n  onResponderEnd?: (e: IEvent) => void;\n}\n\ninterface IProcessors {\n  onResponderTerminationRequest?: IChecker;\n  onResponderTerminate?: (e: IEvent) => void;\n  onResponderGrant?: (e: IEvent) => void;\n  onResponderReject?: (e: IEvent) => void;\n  onResponderRelease?: (e: IEvent) => void;\n}\n\ntype IProps = ICheckers & IResponders & IProcessors;\n\ninterface ICheckerWrapper {\n  _isCapture: boolean;\n  _checker: IChecker;\n  _props: IProps;\n  _dom: HTMLElement;\n}\n\ninterface IEvent extends UIEvent {\n  nativeEvent: NativeTouchEvent;\n}\n\nfunction getCheckersWithPropsByEventPath(checkerKey: string, eventPath: HTMLElement[], isCapture: boolean) {\n  const checkers: ICheckerWrapper[] = [];\n\n  for (let dom of eventPath) {\n    const vnode = (dom as any)._vnode;\n\n    if (vnode != null) {\n      if (typeof vnode.props === \"object\") {\n        const checker = vnode.props[checkerKey];\n\n        if (checker != null) {\n          checkers.push({\n            _isCapture: isCapture,\n            _checker: checker,\n            _props: vnode.props as IProps,\n            _dom: dom,\n          });\n        }\n      }\n    }\n  }\n\n  return checkers;\n}\n\nfunction getCheckers(eventType: string, eventPath: HTMLElement[], eventPathReverse: HTMLElement[]) {\n  const definition = responderEvents[eventType];\n  const checkerKeys = definition._checkerKeys;\n  const checkers: ICheckerWrapper[] = [];\n\n  for (let key of checkerKeys) {\n    // invoke capture checkers from root\n    if (key.indexOf(\"Capture\") > -1) {\n      checkers.push(...getCheckersWithPropsByEventPath(key, eventPathReverse, true));\n    } else {\n      checkers.push(...getCheckersWithPropsByEventPath(key, eventPath, false));\n    }\n  }\n\n  return checkers;\n}\n\nfunction getEventPaths(e: IEvent) {\n  const composedPath = e.composedPath;\n  const path = (e as any).path || (composedPath != null ? composedPath() : getEventPath(e));\n  const pathReverse = path.concat([]).reverse();\n  return { p: path, pr: pathReverse };\n}\n\nfunction setEvent(e: IEvent, responderKey: keyof IProps, props: IProps) {\n  const responder = props[responderKey];\n  const plugin = getPlugin();\n\n  if (plugin!._view) {\n    plugin!._view!._event = {\n      _responder: responder,\n      _type: e.type,\n    };\n  }\n}\n\nfunction initView(e: IEvent, responderKey: keyof IProps, props: IProps, dom: HTMLElement) {\n  const responder = props[responderKey];\n  const plugin = getPlugin();\n\n  plugin!._view = {\n    _event: {\n      _responder: responder,\n      _type: e.type,\n    },\n    _props: props,\n    _dom: dom,\n  };\n\n  const { onResponderGrant } = props;\n\n  if (onResponderGrant) onResponderGrant(e);\n}\n\nfunction handleResponderTransferRequest(e: IEvent, definition: IDefinition, props: IProps, dom: HTMLElement) {\n  const view = getCurrentView();\n  // view can't be null here\n  const { onResponderTerminate, onResponderTerminationRequest } = view!._props;\n  const { onResponderReject } = props;\n\n  if (onResponderTerminationRequest) {\n    const allowTransfer = onResponderTerminationRequest(e);\n\n    if (allowTransfer) {\n      initView(e, definition._responderKey as keyof IProps, props, dom);\n      if (onResponderTerminate) onResponderTerminate(e);\n    } else {\n      if (onResponderReject) onResponderReject(e);\n    }\n  } else {\n    initView(e, definition._responderKey as keyof IProps, props, dom);\n    if (onResponderTerminate) onResponderTerminate(e);\n  }\n}\n\nfunction handleActiveTouches(e: IEvent) {\n  ResponderTouchHistoryStore.touchHistory.numberActiveTouches = e.nativeEvent.touches.length;\n}\n\nfunction isStartish(definition: IDefinition) {\n  return definition._process === ProcessType.start;\n}\n\nfunction isMoveish(definition: IDefinition) {\n  return definition._process === ProcessType.move;\n}\n\nfunction isEndish(definition: IDefinition) {\n  return definition._process === ProcessType.end;\n}\n\nfunction getPlugin() {\n  return plugins.ResponderEventPlugin;\n}\n\nfunction getCurrentView() {\n  const plugin = getPlugin();\n  if (plugin) {\n    return plugin._view;\n  }\n}\n\nfunction getCurrentEvent() {\n  const view = getCurrentView();\n  if (view) {\n    return view._event;\n  }\n}\n\nfunction getCurrentResponder() {\n  const event = getCurrentEvent();\n  if (event) {\n    return event._responder;\n  }\n}\n\nfunction executeResponder(e: IEvent, checker: ICheckerWrapper[]) {\n  const definition: IDefinition = responderEvents[e.type];\n\n  handleActiveTouches(e);\n\n  if (isStartish(definition) || isMoveish(definition)) {\n    for (let item of checker) {\n      e = { ...e, bubbles: !item._isCapture };\n\n      const requireToBeResponder = item._checker(e);\n\n      if (requireToBeResponder) {\n        const view = getCurrentView();\n\n        // if no responding view, set it and call granted\n        if (view == null) {\n          initView(e, definition._responderKey as keyof IProps, item._props, item._dom);\n        } else {\n          // if same view is responding, set new responder\n          if (view._dom === item._dom) {\n            setEvent(e, definition._responderKey as keyof IProps, item._props);\n          } else {\n            // if other view wants to response, start to negotiate\n            handleResponderTransferRequest(e, definition, item._props, item._dom);\n          }\n        }\n\n        break;\n      }\n    }\n\n    const responder = getCurrentResponder();\n\n    if (responder) {\n      responder(e);\n      getPlugin()!._view!._event = null;\n    }\n  }\n\n  if (isEndish(definition)) {\n    const view = getCurrentView();\n\n    if (view != null) {\n      const { onResponderRelease, onResponderEnd } = view._props;\n\n      if (onResponderEnd) {\n        onResponderEnd(e);\n      }\n\n      if (ResponderTouchHistoryStore.touchHistory.numberActiveTouches === 0) {\n        if (onResponderRelease) {\n          onResponderRelease(e);\n        }\n\n        const plugin = getPlugin();\n\n        if (plugin) {\n          plugin._view = null;\n        }\n      }\n    }\n  }\n}\n\nfunction eventListener(e: Event) {\n  const plugin = getPlugin();\n\n  if (!plugin) return;\n\n  const result = plugin.extractEvents(e.type, {}, e, e.target as HTMLElement);\n\n  if (result == null) {\n    return;\n  }\n\n  (e as IEvent).nativeEvent = result.nativeEvent;\n\n  const { p, pr } = getEventPaths(e as IEvent);\n  const checkers = getCheckers(e.type, p as HTMLElement[], pr as HTMLElement[]);\n\n  executeResponder(e as IEvent, checkers);\n}\n\ninterface IResponderEventPlugin {\n  _view: {\n    _dom: HTMLElement;\n    _event: {\n      _responder: ((e: IEvent) => void) | undefined;\n      _type: string;\n    } | null;\n    _props: IProps;\n  } | null;\n  extractEvents: (\n    eventType: string,\n    targetInst: IProps,\n    nativeEvent: Event,\n    nativeEventTarget: HTMLElement\n  ) => { nativeEvent: NativeTouchEvent };\n  eventTypes: any;\n}\n\nexport const ResponderEventPlugin: IResponderEventPlugin = {\n  _view: null,\n  extractEvents: (eventType: string, props: IProps, nativeEvent: Event, nativeEventTarget: HTMLElement) => {\n    return {\n      // event will transform to NativeTouchEvent by react-native-web\n      nativeEvent: (nativeEvent as any) as NativeTouchEvent,\n    };\n  },\n  eventTypes: {\n    responderMove: {\n      dependencies: [\"touchmove\", \"mousemove\"],\n    },\n  },\n};\n\nexport const ResponderTouchHistoryStore = {\n  touchHistory: { numberActiveTouches: 0 },\n};\n\ninterface IPlugins {\n  ResponderEventPlugin?: IResponderEventPlugin;\n}\n\nlet plugins: IPlugins = {};\n\nexport const injectEventPluginsByName = (injectedPlugins: IPlugins) => {\n  plugins = Object.assign({}, plugins, injectedPlugins);\n};\n\nexport default {\n  injectEventPluginsByName,\n  ResponderEventPlugin,\n  ResponderTouchHistoryStore,\n};\n"],"names":["root","oldRootHook","oldCommitHook","ProcessType","moveCheckerKeys","startDefinition","moveDefinition","endDefinition","responderEvents","ResponderEventPlugin","ResponderTouchHistoryStore","plugins","injectEventPluginsByName","getEventDefinition","_checkerKeys","_responderKey","_process","addEventListenerToDocument","let","event","document","addEventListener","eventListener","removeEventListenerToDocument","removeEventListener","getEventPath","e","parentElement","path","target","parent","length","pop","push","getCheckersWithPropsByEventPath","checkerKey","eventPath","isCapture","dom","vnode","checker","checkers","_vnode","props","_isCapture","_checker","_props","_dom","getCheckers","eventType","eventPathReverse","key","indexOf","getEventPaths","composedPath","pathReverse","concat","reverse","p","pr","setEvent","responderKey","responder","plugin","getPlugin","_view","_event","_responder","_type","type","initView","onResponderGrant","handleResponderTransferRequest","definition","getCurrentView","onResponderTerminationRequest","onResponderTerminate","onResponderReject","handleActiveTouches","touchHistory","numberActiveTouches","nativeEvent","touches","isStartish","start","isMoveish","move","isEndish","end","getCurrentEvent","view","getCurrentResponder","executeResponder","item","Object","bubbles","onResponderEnd","onResponderRelease","result","extractEvents","options","_root","node","_commit","vnodes","child","_children","touchstart","mousedown","touchmove","mousemove","touchend","mouseup","injectedPlugins","assign","nativeEventTarget","eventTypes","responderMove","dependencies"],"mappings":"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"}